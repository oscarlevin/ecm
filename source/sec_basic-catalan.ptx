<?xml version="1.0" encoding="UTF-8"?>
<section xmlns:xi="http://www.w3.org/2001/XInclude" xml:id="sec_basic-catalan">
  <title>The Catalan Numbers</title>

  <introduction>
    <p>
      Let's put all of the techniques we have developed in this chapter to work to solve some deeper counting problems.
    </p>
  </introduction>

  <subsection xml:id="subsec-catalanprobs">
    <title>A Few Counting Problems</title>


    <p>
      The counting problems in <xref first="act-lowerpaths" last="act-rootedtrees">Activities</xref> are not supposed to be easy to solve, but you have a lot of combinatorial tools to try.  Say as much as you can about as many as you can before moving on.  At the very least, you should answer the counting problems for small values of <m>n</m> by writing out the set of outcomes.  In <xref ref="subsec-catalanseq"/>, we will investigate the problems in more depth and see how to answer them fully.
    </p>

    <activity xml:id="act-lowerpaths">
      <statement>
        <p>
          We have already seen how to count lattice paths in <xref ref="act-latticepaths">Activities</xref> and <xref ref="act-latticepaths2" text="global"/>.  Now consider a variation.
        </p>
        <p>
          How many paths of length <m>2n</m>, consisting of horizontal and vertical segments of unit length, are there from <m>(0, 0)</m> to <m>(n, n)</m> such that the path never goes above the line <m>y = x</m>? One such path to <m>(3, 3)</m> is shown in <xref ref="catalanpathex" />.
        </p>

        <figure xml:id="catalanpathex">
          <caption> One of the acceptable lattice paths from <m>(0,0)</m> to <m>(3,3)</m>.</caption>
          <image width="40%">
            <latex-image>
              \begin{tikzpicture}
                \draw[very thin, color=gray!50] (0,0) grid (3.5, 3.5);
                \draw[thin] (0,0) -- (3.5,0) node[right]{$x$} (0,0) -- (0,3.5) node[above]{$y$};
                \draw (0,0) node[below left]{$(0,0)$} (3,3) node[above right] {$(3,3)$};
                \draw[very thick] (0,0) -- (1,0) -- (1,1) -- (3,1) -- (3,3);
              \end{tikzpicture}
            </latex-image>
          </image>
        </figure>
      </statement>
      <solution>
        <p>
          Using R for right and U for up, the sequence R U R R U U gives the path.
          The bijection matching R with H and U with D links paths to H-D sequences.
        </p>
      </solution>
    </activity>


    <activity xml:id="act-hdseq">
      <statement>
        <p>
          <m>2n</m> people stand in line at a old-timey movie theater.
          Admission is 50 cents, (denoted by H), and the box office starts with no change.
          <m>n</m> of the people have H and <m>n</m> have $1 (denoted D). In how many ways can the <m>2n</m> people line up so that all can be admitted?
        </p>
      </statement>
      <hint>
        <p>
           Here we enumerate the number of workable sequences of <m>n</m> H's and <m>n</m> D's such that at each point in the sequence the number of H's is not less than the number of D's.  Try writing out all HD sequences and see which ones are acceptable and which are not.
        </p>
      </hint>
      <solution>
        <p>
          The total number of sequences of <m>n</m> H's and <m>n</m> D's is <m>\binom{2n}{n}</m>. We delete the number of
          <em>nonworkable</em> sequences. Each such sequence has a first snag as
          shown by the highlighted D in

          <me>\text{H\ H\ D\ D\ \alert{D}\ H\ H\ D\ D\ D\ H\ H}
          </me>

          Reverse each letter up to and including the snag, obtaining

          <me>
          \text{D D H H H H H D D D H H},
          </me>
          a sequence of <m>n+1</m> H's and <m>n-1</m> D's. For <m>n = 3</m> , H D \alert{D} D H H is a non-workable sequence with the snag indicated. Its mate, found by reversing the first three letters, is D H H D H H, a sequence of 2D's and 4H's. <em>Any</em> arrangement of
          2D's and 4H's will correspond to exactly one non-workable sequence;
          simply scan through and see the <em>first</em> time the H's dominate the
          D's and then reverse through that spot. There are <m>\binom{6}{3}
          = 20</m> arrangements of 3H's and 3D's. There are <m>\binom{6}{2}
          = 15</m> arrangements of 2D's and 4H's each of which
          corresponds to a non-workable sequence. Hence there are <m>\binom{6}{3}
          -\binom{6}{2} = 5</m> workable sequences. In general, <m>\binom{2n}{n}  - \binom{2n}{n - 1} = \frac{1}{n + 1}\binom{2n}{n}</m> gives the number of workable sequences.
        </p>

      </solution>
    </activity>





    <activity xml:id="act-tableau">
      <statement>
        <p>
          Insert the integers <m>1, 2, \ldots, 2n</m> into a 2 by <m>n</m> rectangle of boxes such that the entries are monotonic in rows and columns.  We will call this an <term>acceptable tableau insertion</term>. How many ways can you do this?
        </p>
        <p>
           For example, when <m>n=3</m>, there are five arrangements:
        </p>

          <sidebyside>
            <tabular top="minor" left="minor" valign="middle" halign="center">
              <col right="minor"/>
              <col right="minor"/>
              <col right="minor"/>
              <row bottom="minor">
                <cell>1</cell>
                <cell>2</cell>
                <cell>3</cell>
              </row>
              <row bottom="minor">
                <cell>4</cell>
                <cell>5</cell>
                <cell>6</cell>
              </row>
            </tabular>

            <tabular top="minor" left="minor" valign="middle" halign="center">
              <col right="minor"/>
              <col right="minor"/>
              <col right="minor"/>
              <row bottom="minor">
                <cell>1</cell>
                <cell>2</cell>
                <cell>4</cell>
              </row>
              <row bottom="minor">
                <cell>3</cell>
                <cell>5</cell>
                <cell>6</cell>
              </row>
            </tabular>

            <tabular top="minor" left="minor" valign="middle" halign="center">
              <col right="minor"/>
              <col right="minor"/>
              <col right="minor"/>
              <row bottom="minor">
                <cell>1</cell>
                <cell>2</cell>
                <cell>5</cell>
              </row>
              <row bottom="minor">
                <cell>3</cell>
                <cell>4</cell>
                <cell>6</cell>
              </row>
            </tabular>

            <tabular top="minor" left="minor" valign="middle" halign="center">
              <col right="minor"/>
              <col right="minor"/>
              <col right="minor"/>
              <row bottom="minor">
                <cell>1</cell>
                <cell>3</cell>
                <cell>4</cell>
              </row>
              <row bottom="minor">
                <cell>2</cell>
                <cell>5</cell>
                <cell>6</cell>
              </row>
            </tabular>

            <tabular top="minor" left="minor" valign="middle" halign="center">
              <col right="minor"/>
              <col right="minor"/>
              <col right="minor"/>
              <row bottom="minor">
                <cell>1</cell>
                <cell>3</cell>
                <cell>5</cell>
              </row>
              <row bottom="minor">
                <cell>2</cell>
                <cell>4</cell>
                <cell>6</cell>
              </row>
            </tabular>
          </sidebyside>

      </statement>
      <solution>
        <p>
          A bijection to the path problem is: an entry in the top row corresponds to R. For example, the middle arrangement corresponds to R R U U R U.
        </p>
      </solution>
    </activity>



    <activity xml:id="act-parenthesize">
      <statement>
        <p>
          If we multiply <m>n+1</m> numbers, say <m>a_1a_2\cdots a_n a_{n+1}</m>, we really should put in <m>n</m> pairs of parentheses since multiplication is a binary operation (and what if multiplication is not associative?).  How many ways can we do this?  For example, when <m>n = 3</m>, there are 5 ways:
          <me>
         (ab)(cd)\quad ((ab)c)d \quad a(b(cd)) \quad (a(bc))d \quad a((bc)d).
         </me>
        </p>
      </statement>
      <hint>
        <p>
          Try working recursively.   For a product of <m>n+1</m> symbols
          <m>a_{1}a_{2}\ldots a_{n+1}</m>, break it at the <m>k</m>th symbol:
        <me>
          (a_{1}a_{2}a_{3}\ldots a_{k})(a_{k + 1}\ldots a_{n+1}).
        </me>
        </p>
      </hint>
    </activity>

    <activity xml:id="act-traingulations">
      <statement>
        <p>
          Consider a convex polygon with <m>(n+2)</m> labeled vertices.  In how many ways can non-intersecting diagonals be inserted so as to decompose the polygon into triangles? For <m>n = 3</m> the five
          figures are shown below.
        </p>

            <sidebyside width="15%">
            <image>
              <latex-image>
                \begin{tikzpicture}
                \fivegon;
                \draw (a) -- (d) -- (b);
                \end{tikzpicture}
              </latex-image>
            </image>
            <image>
              <latex-image>
                \begin{tikzpicture}
                \fivegon;
                \draw (b) -- (e) -- (c);
                \end{tikzpicture}
              </latex-image>
            </image>
            <image>
              <latex-image>
                \begin{tikzpicture}
                \fivegon;
                \draw (d) -- (a) -- (c);
                \end{tikzpicture}
              </latex-image>
            </image>
            <image>
              <latex-image>
                \begin{tikzpicture}
                \fivegon;
                \draw (e) -- (b) -- (d);
                \end{tikzpicture}
              </latex-image>
            </image>
            <image>
              <latex-image>
                \begin{tikzpicture}
                \fivegon;
                \draw (e) -- (c) -- (a);
                \end{tikzpicture}
              </latex-image>
            </image>
          </sidebyside>

      </statement>
      <hint>
        <p>
          You might have found a recursion for the sequence of answers in <xref ref="act-catalanfirst"/>.
        </p>
      </hint>
    </activity>

    <activity xml:id="act-rootedtrees">
      <statement>
        <p>
          Consider <term>rooted binary trees</term>.  Rooted trees are trees in the graph theory sense, except that one vertex is designated as the root, which puts a natural ordering on the vertices.  Vertices adjacent to the root are its <term>children</term>, and vertices adjacent to those (other than the root) are their children, and so on.  We are looking at <em>binary</em> trees, so each vertex will have either two children (designated the <term>left child</term> and <term>right child</term>) or no children at all (i.e., the vertex is a leaf).
        </p>

        <p>
          How many rooted binary trees have exactly <m>n+1</m> leaves?  Note that because we designate children as left or right, the two trees below are counted as distinct.
        </p>
        <sidebyside widths="20%, 20%">
          <image>
            <latex-image>
              \begin{tikzpicture}
                \coordinate (r) at (0,0);
                \coordinate (rl) at (-1,1);
                \coordinate (rr) at (1,1);
                \coordinate (rll) at (-1.5,2);
                \coordinate (rlr) at (-.5, 2);
                \draw (r) \v -- (rl) \v -- (rll) \v (rl) -- (rlr) \v (r) -- (rr) \v;
              \end{tikzpicture}
            </latex-image>
          </image>
          <image>
            <latex-image>
              \begin{tikzpicture}
                \coordinate (r) at (0,0);
                \coordinate (rl) at (-1,1);
                \coordinate (rr) at (1,1);
                \coordinate (rll) at (-1.5,2);
                \coordinate (rlr) at (-.5, 2);
                \coordinate (rrl) at (.5,2);
                \coordinate (rrr) at (1.5, 2);
                \draw (r) \v -- (rr) \v -- (rrl) \v (rr) -- (rrr) \v (r) -- (rl) \v;
              \end{tikzpicture}
            </latex-image>
          </image>
        </sidebyside>
      </statement>
      <hint>
        <p>
          There should be 5 rooted binary trees with 4 leaves (the <m>n = 3</m> case).
        </p>
      </hint>
    </activity>

  </subsection>

  <subsection xml:id="subsec-catalanseq">
    <title>The Catalan Numbers</title>

    <p>
      The sequence of Catalan numbers, named after Eugene Catalan who along with Euler discovered many of the properties of these numbers, is the sequence <m>(C_n)_{n \ge 0}</m> starting, <me>1, 1, 2, 5, 14, 42, 132, \ldots</me>. All of the counting problems above should be answered by Catalan numbers.  Let's investigate this sequence and discover some of its properties.
    </p>

    <p>
      First, we should make sure that at the very least, all of the counting problems above have the same answer.  This will be hugely helpful, since then we could use any of them as a model to discuss the sequence.
    </p>

    <p>
      How do you prove that two counting problems have the same answer?  The bijection principle tells us that if there is a bijection between two sets, then the sets have the same size.  So let's find some bijections.
    </p>

    <example xml:id="act-pathshdseq">
      <statement>
        <p>
          Find a bijection between the set of lattice paths from <m>(0,0)</m> to <m>(n,n)</m> that do not rise above the line <m>y = x</m> (as in <xref ref="act-lowerpaths"/>) and the set of ways that the movie patrons in <xref ref="act-hdseq"/> can line up.
        </p>
      </statement>
      <!-- <hint>
        <p>
          How could you represent the lattice path using strings of two symbols?  What makes such a path acceptable?
        </p>
      </hint> -->
      <solution>
        <p>
          Represent each lattice path as a string of R's and U's.  Represent each way that the movie patrons can line up as a string of H's and D's.  The bijection will send each R to an H and each U to a D.
        </p>

        <p>
          We need to verify that this bijection is both well defined, and that its inverse is well defined (that the function is injective and surjective).  The key to all of these is to consider what makes a string valid in each case.
        </p>
        <p>
        First, notice that the lattice paths must have an equal number of R's and U's.  Similarly, the string of movie patrons must have an equal number of H's and D's. 
        Further, every initial substring of R's and U's must have at least as many R's as U's, so that the path does not go above the line <m>y=x</m>.  Similarly, the every initial substring of H's and D's (half dollars and dollars) must have at least as many H's as D's, so that change can always be given.  The H's and R's must <em>dominate</em>.
        </p>

        <p>
          The the conditions on what makes a string valid match up, so every string in one set will match up with exactly one string in the other.
        </p>
      </solution>
    </example>

    <p>
      Representing the set of outcomes as strings of sequences is useful, because it suggests a bijection between different types of problems.  The strings of paths and movie theater lines from <xref ref="act-pathshdseq"/> are called <term>Dyck words</term>.  These are strings of an equal number of two symbols, say <m>x</m> and <m>y</m>, such that no initial segment of the string has more <m>y</m>'s than <m>x</m>'s.
    </p>

    <p>
      We will now see that the number of Dyck words of length <m>2n</m> is <m>C_n</m>.
    </p>

    <activity>
      <task>
        <statement>
          <p>
            Show that the number of acceptable tableau insertions from <xref ref="act-tableau"/> is always a Catalan number.  That is, give a bijection between the set of Dyck words of length <m>2n</m> to the set of ways to insert the numbers 1 through <m>2n</m> into a <m>2\times n</m> tableau so that both rows and columns are increasing.
          </p>
        </statement>
        <hint>
          <p>
            If you put the numbers into the tableau in order, for each number, you must decide to put it in the top row or the bottom row.  Do you have any other choices?  What would constitute a mistake?
          </p>
        </hint>
      </task>
      <task>
        <statement>
          <p>
            Show the number of ways to parenthesize a product of <m>n+1</m> numbers is <m>C_n</m> (see <xref ref="act-parenthesize"/>).
          </p>
        </statement>
        <hint>
          <p>
            One way to parenthesize the product <m>abcd</m> is <m>a((bc)d)</m>, but this is really <m>(a((bc)d))</m>, so that the outer set set of parentheses belong with the product of <m>a</m> and <m>((bc)d)</m>.  Further, not that if we wrote this just as <m>(a((bcd</m>, there would be only one way to insert the right parentheses that would make the product parse correctly.
          </p>
        </hint>
      </task>
    </activity>

    <p>
      Not all of the models for the Catalan numbers are easily represented by Dyck words (or at least not in an obvious way).
    </p>

    <exploration>
      <statement>
        <p>
          Demonstrate a bijection between the set of acceptable ways to parenthesize the product of <m>n+1</m> terms and the set of rooted binary trees with <m>n+1</m> leaves (see <xref ref="act-rootedtrees"/>).
        </p>
      </statement>
      <hint>
        <p>
          Think about how students are taught to factor numbers.
        </p>
      </hint>
    </exploration>

    <p>
      We have now verified that all our sample problems are Catalan numbers, except for the triangulations of polygons problem.  There is a clever way to associate each triangulation with a binary tree, as suggested by <xref ref="fig-triangulationtree"/>.  However, let's take this opportunity to illustrate another method for proving two problems have the same answers.
    </p>

    <figure xml:id="fig-triangulationtree">
      <caption>A triangulation of a 5-gon and associated rooted binary tree.</caption>
      <sidebyside width="25%">
        <image>
        <latex-image>
          \begin{tikzpicture}
            \fivegon;
            \draw (d) -- (a) -- (c);
            \draw (0,.75) \v -- (-1, 1.3) \v -- (-1.5, 2.5) \vl{$b$};
            \draw (-1,1.3) -- (-2,.8) \vl{$a$};
            \draw (0,.75) -- (1,1.2) \v -- (1.5,2.5) \vr{$c$};
            \draw (1,1.2) -- (2,.7) \vr{$d$};
          \end{tikzpicture}
        </latex-image>
        </image>
        <image>
         <latex-image>
          \begin{tikzpicture}
            \draw (0,.75) \v -- (-1, 1.3) \v -- (-1.5, 2.5) \va{$a$};
            \draw (-1,1.3) -- (-.5,2.5) \va{$b$};
            \draw (0,.75) -- (1,1.2) \v -- (1.5,2.5) \va{$d$};
            \draw (1,1.2) -- (.5,2.5) \va{$c$};
          \end{tikzpicture}
         </latex-image>
        </image>
      </sidebyside>
    </figure>


    <activity>
      <introduction>
        <p>
          Consider the recurrence relation
          <me>
            C_{n + 1} = \sum_{i = 0}^n C_iC_{n-i} = C_{0}C_{n} + C_{1}C_{n - 1} + \ldots + C_{n}C_{0}
          </me>
          with <m>C_0 = 1</m>.
        </p>
      </introduction>
      <task>
        <statement>
          <p>
            Calculate the first 6 values of the sequence from this recurrence relation, to verify that it appears to agree with the Catalan numbers.
          </p>
        </statement>
        <solution>
          <p>
            The first six values of the sequence are 1, 2, 5, 11, 42, 132.
          </p>
        </solution>
      </task>
      <task>
        <statement>
          <p>
            Prove that the Catalan numbers satisfy the recurrence relation.
          </p>
        </statement>
        <hint>
          <p>
            Look at rooted binary trees.  What happens when you remove the root?  You could also use the parenthesizing model by asking where <q>main product</q> occurs.
          </p>
        </hint>
        <solution>
          <p>
            We know that the Catalan numbers count the number of rooted binary trees.  Specifically, the number of rooted binary trees with <m>n+2</m> leaves is <m>C_{n+1}</m>.  Thus we must simply argue that the number of rooted binary trees with <m>n+2</m> leaves is also
            <me>
              \sum_{i=0}^{n} C_iC_{n-i} = C_0C_{n} + C_1C_{n-1} + \cdots + C_{n}C_0.
            </me>
          </p>

          <p>
            To see this, consider the result of removing the root of a rooted binary tree.  This results in two more trees (the left and right child of the root are the new roots).  These will either be rooted binary trees, or a single vertex (in the case that one of the children of the root was a leaf already).  There are <m>n+1</m> cases: the left tree is just the root (so the right tree has <m>n+1</m> leaves), the left tree has 2 leaves (so the right tree has <m>n</m> leaves), the left tree has 3 leaves (so the right tree has <m>n-1</m> leaves), and so on until the case where the left tree has <m>n+1</m> leaves (and the right tree is just the root).
          </p>

          <p>
            Each of these cases corresponds to a term in the sum.  When the left tree has <m>i+1</m> leaves, it could be any of <m>C_{i}</m> trees, and for each, the right tree could be any of <m>C_{n-i}</m> trees (they all have <m>n+2-(i+1) = n-i+1</m> leaves).  Using the product and then sum prinicple, we get the right hand side of the recurrence.
          </p>
        </solution>
      </task>
      <task>
        <statement>
          <p>
            Prove that the number of triangulations of a convex polygon with <m>n+2</m> sides also satisfies this recurrence relation (if you haven't already done so in <xref ref="act-catalanfirst"/>).  Conclude that the triangulations problem is also solved by the Catalan numbers.
          </p>
        </statement>
        <hint>
          <p>
            Fix an edge of the polygon.  There will be exactly <m>n-2</m> triangles this edge could be part of.  For each of those, can you count the number of triangles that can be made of what ?
          </p>
        </hint>
        <solution>
          <p>
            On one hand, we have that <m>C_{n+1}</m> is the number of ways to triangulate a polygon with <m>n+3</m> sides.  Now fix a side the of polygon and consider each of the <m>n+1</m> non-incident vertices.  For each vertex, we can form exactly one triangle that has our fixed side as a side.  The other two sides of this triangle will create two new polygons with the other sides of the original polygon (perhaps the polygon will only have 1 side, if the vertex is chosen adjacent to the fixed side).  These will give you your terms in the sum on the right hand side.
          </p>
        </solution>
      </task>
    </activity>

    <p>
      Next, we would like to find a closed formula for <m>C_n</m>.  We can do so using lattice paths.
    </p>

    <activity>
      <introduction>
        <p>
          Recall that <m>C_n</m> gives the number of lattice paths from <m>(0,0)</m> to <m>(n,n)</m> that do not cross the line <m>y = x</m> (but they may touch this line).  We will compare this to all the lattice paths from <m>(0,0)</m> to <m>(n,n)</m>.
        </p>
      </introduction>
      <task>
        <statement>
          <p>
            Explain why the number of lattice paths from <m>(0,0)</m> to <m>(n,n)</m> that <em>do</em> cross the line <m>y = x</m> is the same as the number of lattice paths from <m>(0,0)</m> to <m>(n,n)</m> that touch or cross the line <m>y = x + 1</m>.
          </p>
        </statement>
        <solution>
          <p>
            If a lattice path between <m>(0,0)</m> and <m>(n,n)</m> goes outside the
            triangle, it can only do so on an up-step. (A step from <m>(i,j)</m> to
            <m>(i,j+1)</m>.) And an up-step must originate at a point with integer
            coordinates. If <m>j\lt i</m> an up-step from <m>(i,j))</m> cannot leave the triangle.
            Thus to leave the triangle, the up-step must leave from a point of the form
            <m>(i,i)</m>, and go to <m>(i,i+1)</m>, which is on the line <m>y=x+1</m>.
          </p>
        </solution>
      </task>
      <task>
        <statement>
          <p>Find a bijection between lattice paths from <m>(0,0)</m> to <m>(n,n)</m>
          that touch (or cross) the line <m>y=x+1</m> and lattice paths from
          <m>(-1,1)</m> to <m>(n,n)</m>.
        </p>
        </statement>
        <hint>
          <p>
        Given a path from <m>(0, 0)</m> to <m>(n, n)</m> which touches or crosses the line <m>y = x + 1</m>,
        how can you modify the part of the path from <m>(0, 0)</m> to the first touch of <m>y = x + 1</m> so that the modified path starts instead at <m>(-1, 1)</m>? The trick is to do this in a systematic way that will give you your bijection.
          </p>
        </hint>
        <solution>
            <p>Suppose we have a lattice path form <m>(0,0)</m> to <m>(n,n)</m> which touches or crosses the line <m>y=x+1</m>. Let <m>(k,k+1)</m> be the first point on the line <m>y=x+1</m> that the lattice path touches. From that point, work backwards, replacing every up-step with a step one unit to the left and every right-step with a step one unit down. The segment of the path you just changed will have moved left <m>k+1</m> times, so its leftmost <m>x</m> coordinate will be <m>-1</m>, and it will have moved down <m>k</m> times, so its lowest <m>y</m> coordinate will be 1.  Thus we now have a lattice path from <m>(-1,1)</m> to <m>(n,n)</m>. Further, given a lattice path from <m>(-1,1)</m> to <m>(n,n)</m>, it must cross the line <m>y=x+1</m> at least once, because it starts above the line and ends below it. At the first point where such a path touches the line <m>y=x+1</m>, say <m>(k',k'+1)</m>, work backwards replacing every up-step with a step to the left and every right-step with a step downward. The leftmost point on this path will have <m>x</m> coordinate 0, and the lowest point will have <m>y</m> coordinate 0, so the new path will be a lattice path from <m>(0,0)</m> to <m>(n,n)</m> that touches the line <m>y=x+1</m>. Clearly these two processes reverse each other, and so they give us a bijection between paths form <m>(0,0)</m> to <m>(n,n)</m> that touch the line <m>y=x+1</m> and lattice lattice paths from <m>(-1,1)</m> to <m>(n,n)</m>. Notice that geometrically what we are doing to get the bijection is to take the portion of a lattice path that goes from the initial point till the first touch of the line <m>y=x+1</m> and reflecting it around that line. This idea of reflection was introduced by Feller, and is called Feller's reflection principle.
        </p>
        </solution>
      </task>
      <task>
        <statement>
          <p>
            Find a formula for the number of lattice paths from <m>(0,0)</m> to <m>(n,n)</m> that do not cross the line <m>y=x</m>. That is, a formula for <m>C_n</m>.
          </p>
        </statement>
        <hint>
          <p>
        A path either touches the line <m>y = x + 1</m> or it doesn't. This partitions the set of paths into two blocks.
          </p>
        </hint>
        <solution>
          <p>
            <m>C_n=\binom{2n}{n} - \binom{2n}{n+1}=\frac{1}{n+1}\binom{2n}{n}.</m>
          </p>
        </solution>
      </task>
    </activity>

    <p>
      So <m>C_n = \binom{2n}{n} - \binom{2n}{n+1}</m>.  Another formula you might run into is <m>C_n = \frac{1}{n+1}\binom{2n}{n}</m>.  Why is this also correct?
    </p>
  <!-- TODO: add pascal triangle picture???? -->
    <exploration>
      <task>
        <statement>
          <p>
            Prove that <m>\binom{2n}{n} - \binom{2n}{n+1} = \frac{1}{n+1}\binom{2n}{n}</m> using a method of your choice.
          </p>
        </statement>
        <hint>
          <p>
            The algebraic formula for <m>\binom{n}{k}</m> would be appropriate here.
          </p>
        </hint>
      </task>
      <task>
        <statement>
          <p>
            Challenge problem: explain the formula <m>C_n = \frac{1}{n+1}\binom{2n}{n+1}</m> using the quotient principle.  This would give an alternate proof for the closed formula for the Catalan numbers.
          </p>
        </statement>
      </task>
    </exploration>
  </subsection>

  <subsection xml:id="subsec-catalanproblems">
    <title>More Problems</title>
     <p>
       Here are a few more activities to practice with the Catalan numbers.
     </p>

      <exploration>
        <statement>
          <p>
            Find <m>C_6</m> and <m>C_7</m> using both the recursive and closed formulas.
          </p>
        </statement>
      </exploration>

      <exploration>
        <statement>
          <p>
            Show, by example, how the bijection between Dyck words and valid parenthesizing works.  To do this, list the <m>C_4 = 14</m> valid Dyck words, then list the <m>C_4 = 14</m> ways to parenthesize <m>abcde</m>, in the corresponding order.
          </p>
        </statement>
        <solution>
          <p>
            Some examples: HDHHDHDD corresponds with <m>a((bc)(de))</m>.  The string HHHHDDDD corresponds with <m>(((ab)c)d)e</m>.  You should list all 14 of each.
          </p>
        </solution>
      </exploration>


      <exploration>
        <introduction>
          <p>
            Here is a way to establish the closed formula for <m>C_n</m> using Dyck words.  For simplicity, consider Dyck words using the symbols 0 and 1, insisting that no initial segment contains more 1's than 0's.
          </p>
        </introduction>
        <task>
          <statement>
            <p>
              Of all <m>2n</m>-bit strings of weight <m>n</m>, some are Dyck words and some are not.  Explain which are not.  What do all of these have in common?
            </p>
          </statement>
          <solution>
            <p>
              Any <m>2n</m>-bit string of weight <m>n</m> that is NOT a Dyck word will have some initial segment in which exactly one more 1 appears than 0.
            </p>
          </solution>
        </task>
        <task>
          <statement>
            <p>
              Suppose some initial segment of a bit string contains one more 1 than 0.  If you changed every 1 to a 0 and every 0 to a 1 in this initial segment, how many 0's and how many 1's would the entire bit string have?
            </p>
          </statement>
          <solution>
            <p>
              The resulting string will have one more 0 and one fewer 1.  That is, if the weight was originally <m>n</m>, the weight would now be <m>n-1</m>.
            </p>
          </solution>
        </task>
        <task>
          <statement>
            <p>
              Describe a bijection between the set of <m>2n</m>-bit strings of weight <m>n-1</m> and the set of <m>2n</m>-bit strings of weight <m>n</m> that are NOT Dyck words.
            </p>
          </statement>
          <solution>
            <p>
              The bijection is precisely what is described in the previous part.  For any string that is not a Dyck word, replace all 0's with 1's and all 1's with 0's up to and including the first 1 that outnumbers the 0's, reading from left to right.
            </p>
          </solution>
        </task>
        <task>
          <statement>
            <p>
              Why does this prove that <m>C_n = \binom{2n}{n} - \binom{2n}{n-1}</m>?
            </p>
          </statement>
          <solution>
            <p>
              The total number of <m>2n</m>-bit strings of weight <m>n</m> is <m>\binom{2n}{n}</m>.  We remove the <m>\binom{2n}{n-1}</m> strings that are not Dyck words.  But the number of Dyck words of length <m>2n</m> is <m>C_n</m>.
            </p>
          </solution>
        </task>
      </exploration>


      <exploration>
        <statement>
          <p>
            Find a bijection between the ways of parenthesizing <m>n+1</m> terms and the ways of triangulating a convex polygon with <m>n+2</m> sides.  Illustrate this by matching up the outcomes for <m>n = 3</m>.
          </p>
        </statement>
      </exploration>



      <exploration>
        <statement>
          <p>
            Let <m>C_{n} = \frac{1}{n + 1}\binom{2n}{n}</m>. Verify
            the formula:
            <me>
              C_{n} = \binom{n}{1} C_{n - 1} - \binom{n - 1}{2} C_{n - 2} + \binom{n - 2}{3} C_{n - 3} - \cdots
            </me>
          </p>
        </statement>
      </exploration>

      <p>
        We have considered 6 or 7 different interpretations of Catalan numbers so far.  There are many others.  In fact, Richard P. Stanley includes 66 different interpretations of the Catalan numbers in the book <em>Enumerative Combinatorics: Volume 2</em>.
      </p>

      <p>
        The remainder of this section contains some examples.  See if you can explain why each of these really are interpretations of <m>C_n</m>.
      </p>



      <exploration>
        <statement>
          <p>
            A and B each receive <m>n</m> votes. How many ways are there that the <m>2n</m> votes can be tallied so that A never trails B.
          </p>
        </statement>
      </exploration>

      <exploration>
        <statement>
          <p>
            Place <m>2n</m> points on the circumference of a circle and draw <m>n</m>  non-intersecting chords.  How many ways can you do this?  Equivalently, if <m>2n</m> people stand in a circle, how many ways can everyone shake hands with one other person so that no one's arms cross?  Assume these people have arbitrarily long arms.
          </p>
        </statement>
        <solution>
          <p>
            To see these are counted by the Catalan numbers, it is enough to verify that they satisfy the same recurrence relation as the Catalan numbers.  Fix one of the <m>2n</m> points and draw a chord to an acceptable second point (this will need to be an odd number of points away, so that all the points on either side of the chord can be matched up).  This creates two new <q>circles</q>, for which you can compute the number of non-intersecting chords using the smaller Catalan numbers, getting the recurrence.
          </p>
        </solution>
      </exploration>

      <exploration>
        <statement>
          <p>
            <m>2n</m> kids, all of different heights, must line up for a class picture.  They will do this in two equal rows, but for variety, they will take a picture from the front and from the right.  How many ways can the kids line up so that both pictures don't have any taller kid blocking a shorter kid?
          </p>
        </statement>
      </exploration>

      <exploration>
        <statement>
          <p>
            Consider the graph <m>P_n</m> (a path with <m>n</m> edges and <m>n+1</m> vertices).  Call one of the endpoints of the path <m>v</m>.  How many walks of length <m>2n</m> start and stop at <m>v</m>?  A walk in a graph is a sequence of adjacent vertices (think of tracing along edges of the graph), that does allow for repeated vertices.
          </p>
        </statement>
        <solution>
          <p>
            We can describe a walk starting at <m>v</m> as a Dyck word: use <m>a</m> for each step away from <m>v</m> and <m>t</m> for each stem toward <m>v</m>.  Since <m>v</m> is an endpoint of the path, no initial segment of this path can contain more <m>t</m>'s than <m>a</m>'s, so every path is a unique Dyck word.  Similarly, given any Dyck word on these symbols, we have a unique path starting and ending at <m>v</m> (there are <m>n</m> <m>a</m>'s in our words, so the farthest away you can go from <m>v</m> is <m>a</m> steps away, and the path has length <m>a</m>).
          </p>
        </solution>
      </exploration>

      <exploration>
      <!-- TODO: add picture or describe better -->
        <statement>
          <p>
            Draw a <m>n</m> by <m>n</m> right triangle using squares on graph paper (a sort of staircase shape, made up of <m>\frac{n(n+1)}{2}</m> squares).  Shade the squares using exactly <m>n</m> colors so that each color makes a rectangle (but not all colors are rectangles of the same dimension).  How many ways can this be done?
          </p>
        </statement>
      </exploration>

      <exploration>
        <statement>
          <p>
            If you have <m>2n</m> toothpicks, you could arrange them into a <q>mountain range</q> shape by putting half of the toothpicks angled upward, and the other half angled downward.  Assume the first toothpick starts at sea level, so no valleys dip below that height. In how many ways can this be done?
          </p>
          <p>
            Alternatively, we can define a <term>diagonal lattice path</term> as one in which each segment travels from <m>(a,b)</m> to <m>(a+1, b+1)</m> or to <m>(a+1, b-1)</m>.  How many diagonal lattice paths from <m>(0,0)</m> to <m>(2n,0)</m> never dip below the <m>x</m>-axis?  Such diagonal lattice paths are sometimes called <term>Dyck paths</term> or <term>Catalan paths</term>.
          </p>
        </statement>
      </exploration>

      <exploration>
        <statement>
          <p>
            How many permutations of <m>[n]</m> do not contain three consecutive numbers <m>abc</m> with <m>a \lt b \lt c</m>?  For example, the permutations <m>1324</m> and <m>1423</m> are both acceptable, but <m>2341</m> and <m>1342</m> are not.
          </p>
        </statement>
      </exploration>


    </subsection>
    

<!-- TODO: summarize the five bijections somewhere -->
</section>
